default: all
C_SRC=src/main/c
TEST_SRC=src/test/c
APPS_SRC=src/app/c

VERSION_STRING:=SeaSocks/$(or $(VERSION),unversioned) ($(shell git describe --always --dirty))
CPPFLAGS=@CXXFLAGS@ -fPIC -Wall -Werror '-DSEASOCKS_VERSION_STRING="$(VERSION_STRING)"' -I$(C_SRC)
CXX=@CXX@

.PHONY: all clean run test clobber

OBJ_DIR=obj
BIN_DIR=bin

CPP_SRCS=$(shell find $(C_SRC) -name '*.cpp')
TEST_SRCS=$(shell find $(TEST_SRC) -name '*.cpp')
APPS_CPP_SRCS=$(shell find $(APPS_SRC) -name '*.cpp')
TARGETS=$(patsubst $(APPS_SRC)/%.cpp,$(BIN_DIR)/%,$(APPS_CPP_SRCS))

apps: $(TARGETS)
all: apps $(BIN_DIR)/libseasocks.so $(BIN_DIR)/libseasocks.a test

debug:
	echo $($(DEBUG_VAR))

OBJS=$(patsubst $(C_SRC)/%.cpp,$(OBJ_DIR)/%.o,$(CPP_SRCS))
TEST_OBJS=$(patsubst $(TEST_SRC)/%.cpp,$(OBJ_DIR)/%.o,$(TEST_SRCS))
APPS_OBJS=$(patsubst $(APPS_SRC)/%.cpp,$(OBJ_DIR)/%.o,$(APPS_CPP_SRCS))
ALL_OBJS=$(OBJS) $(APPS_OBJS) $(TEST_OBJS)
GEN_OBJS=$(OBJ_DIR)/embedded.o

-include $(ALL_OBJS:.o=.d)

$(APPS_OBJS) : $(OBJ_DIR)/%.o : $(APPS_SRC)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CPPFLAGS) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$@" -c -o "$@" "$<"

$(OBJS) : $(OBJ_DIR)/%.o : $(C_SRC)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CPPFLAGS) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$@" -c -o "$@" "$<"

$(TEST_OBJS) : $(OBJ_DIR)/%.o : $(TEST_SRC)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CPPFLAGS) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$@" -c -o "$@" "$<"

$(TARGETS) : $(BIN_DIR)/% : $(OBJ_DIR)/%.o $(OBJS) $(GEN_OBJS)
	mkdir -p $(BIN_DIR)
	$(CXX) $(CPPFLAGS) -o $@ $^

$(BIN_DIR)/libseasocks.so: $(OBJS) $(GEN_OBJS)
	mkdir -p $(BIN_DIR)
	$(CXX) -shared $(CPPFLAGS) -o $@ $^

$(BIN_DIR)/libseasocks.a: $(OBJS) $(GEN_OBJS)
	mkdir -p $(BIN_DIR)
	-rm -f $(BIN_DIR)/libseasocks.a
	ar cq $@ $^

EMBEDDED_CONTENT:=$(shell find src/main/web -type f)
$(OBJ_DIR)/embedded.o: scripts/gen_embedded.py $(EMBEDDED_CONTENT) src/main/c/internal/Embedded.h
	@mkdir -p $(dir $@)
	scripts/gen_embedded.py $(EMBEDDED_CONTENT) | $(CXX) $(CPPFLAGS) -x c++ -c -o "$@" -

run: $(BIN_DIR)/ws_test
	$(BIN_DIR)/ws_test

ifeq ("@HAVE_GMOCK@","1")
$(BIN_DIR)/tests: $(TEST_OBJS) $(BIN_DIR)/libseasocks.a
	$(CXX) $(CPPFLAGS) -I $(TEST_SRC) -o $@ $^ @TEST_LIBS@

.tests-pass: $(BIN_DIR)/tests
	@rm -f .tests-pass
	$(BIN_DIR)/tests
	@touch .tests-pass

test: .tests-pass
else
test:
	@echo "Not running tests as no gmock/gtest found during configure"
endif

clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR) *.tar.gz .tests-pass

clobber: clean
	rm -rf lib include

